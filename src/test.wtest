import mundoMusical.*
import guitarra.*
import canciones.*

describe "tests respecto de los músicos" {

    const lucia
	const joaquin
	const luisAlberto
	const fender
	const gibson
	const cisne
	const laFamilia
	const lunaPark
	const musicoSolista
	const musicoDeGrupo
	const musicoReCapo
	
fixture {
	musicoSolista = new TipoMusicoSolista("amor")
    musicoDeGrupo = new TipoMusicoDeGrupo(5)
    musicoReCapo = new TipoMusicoReCapo(fender)
    lucia = new Musico(70, musicoSolista)
    joaquin = new Musico(20, musicoDeGrupo)
    luisAlberto = new Musico(0, musicoReCapo)
	fender = new Guitarra(10)
	gibson = new Guitarra(15)
	cisne = new Cancion("Hoy el viento se abrió quedó vacío el aire una vez más y el manantial brotó y nadie está aquí y puedo ver que solo estallan las hojas al brillar", 312,"cisne", joaquin)
    laFamilia = new Cancion("Quiero brindar por mi gente sencilla, por el amor brindo por la familia", 264, "laFamilia", joaquin)
	lunaPark = new Lugar(9290)
}

test "La habilidad de Joaquín cantando en Pimpinela debe ser 25" {
	
    joaquin.tocaEnGrupo()
	assert.equals(joaquin.habilidad(), 25)

}

test "La habilidad de Joaquín cantando solo debe ser 20" {

	assert.equals(joaquin.habilidad(), 20)

}

test "La habilidad de Lucía cantando en Pimpinela debe ser 50" {

	lucia.tocaEnGrupo()
	assert.equals(lucia.habilidad(), 50)

}

test "La habilidad de Lucía cantando sola debe ser 70" {

	assert.equals(lucia.habilidad(), 70)

}

test "La habilidad de Luis Alberto tocando con la fender es 80" {
	luisAlberto.guitarra(fender)
	assert.equals(luisAlberto.habilidad(), 80)
}

test "La habilidad de Luis Alberto tocando con la gibson sana es 100" {
	luisAlberto.guitarra(gibson)
	assert.equals(luisAlberto.habilidad(), 100)
}

test "La habilidad de Luis Alberto tocando con la gibson maltratada es 40" {
	gibson.valor(5)
	luisAlberto.guitarra(gibson)
	assert.equals(luisAlberto.habilidad(), 40)
}

test "Joaquín interpreta mal la canción La Familia" {
	assert.notThat(joaquin.interpretaBien(laFamilia))
}

test "Joaquín interpreta bien la canción Cisne" {
	assert.that(joaquin.interpretaBien(cisne))
}

test "Lucía interpreta bien la canción La Familia" {
	assert.that(lucia.interpretaBien(laFamilia))
}

test "Lucía interpreta mal la canción Cisne" {
	assert.notThat(lucia.interpretaBien(cisne))
}

test "Luis Alberto interpreta bien la canción Cisne" {
	assert.that(luisAlberto.interpretaBien(cisne))
}

test "Luis Alberto interpreta bien la canción La Familia" {
	assert.that(luisAlberto.interpretaBien(laFamilia))
}

test "Joaquín cobra 50 por actuar con Pimpinela en el Luna Park" {   //no importa donde actúa, es el precio de la hora
	
	joaquin.tocaEnGrupo()
	assert.equals(joaquin.cobra(lunaPark), 50)
}

test "Joaquín actúa solo en La Trastienda y cobra 100" {             //no importa donde actúa, es el precio de la hora
	assert.equals(joaquin.cobra(laTrastienda), 100)
}

test "la capacidad de La Trastienda para el 05/08/2017 es 700" {
	
	const unaFecha = new wollok.lang.Date(05,08,2017)
	assert.equals(laTrastienda.capacidad(unaFecha), 700)
}

test "la capacidad de La Trastienda para el 08/08/2017 es 400" {
	const unaFecha = new wollok.lang.Date(08,08,2017)
	assert.equals(laTrastienda.capacidad(unaFecha), 400)
}

test "Lucía cobra 500 por actuar ¿con Pimpinela? en el Luna Park" {      //no importa si canta sola o no
	assert.equals(lucia.cobra(lunaPark), 500)
}

test "Lucía cobra 400 por actuar ¿con Pimpinela? en el La Trastienda" {   //no importa si canta sola o no
	assert.equals(lucia.cobra(laTrastienda), 400)
}

test "Luis Alberto cobra 1000 por actuar antes de septiembre 2017 en el Luna Park" {
	const unaFecha = new wollok.lang.Date(01,08,2017)
	assert.equals(luisAlberto.cobra(unaFecha), 1000)
}

test "Luis Alberto cobra 1200 por actuar despues de septiembre 2017 en el La Trastienda" {
    const unaFecha = new wollok.lang.Date(01,09,2017)
	assert.equals(luisAlberto.cobra(unaFecha), 1200)
}

test "El costo de la presentación de los tres en el Luna Park es 1550" {
	 const unaFecha = new wollok.lang.Date(01,08,2017)
	joaquin.tocaEnGrupo()
	assert.equals(lucia.cobra(lunaPark)+joaquin.cobra(lunaPark)+luisAlberto.cobra(unaFecha), 1550)
}

test "El costo de la presentación de los tres en el La Trastienda el 15/11/2017 es 1650" {
	joaquin.tocaEnGrupo()
	const unaFecha = new wollok.lang.Date(15,11,2017)
	assert.equals(lucia.cobra(laTrastienda)+joaquin.cobra(laTrastienda)+luisAlberto.cobra(unaFecha), 1650)
}
}

